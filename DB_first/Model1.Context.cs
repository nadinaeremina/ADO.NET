//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DB_first
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Company_DBEntities : DbContext
    {
        public Company_DBEntities()
            : base("name=Company_DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Customers> Customers { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
    
        public virtual ObjectResult<stp_CustomerALL_Result> stp_CustomerALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_CustomerALL_Result>("stp_CustomerALL");
        }
    
        public virtual ObjectResult<stp_CustomerByID_Result> stp_CustomerByID(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("customerID", customerID) :
                new ObjectParameter("customerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_CustomerByID_Result>("stp_CustomerByID", customerIDParameter);
        }
    
        public virtual int stp_CustomerAdd(string firstName, string lastName, Nullable<System.DateTime> dateOfBirth, ObjectParameter customerID)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_CustomerAdd", firstNameParameter, lastNameParameter, dateOfBirthParameter, customerID);
        }
    }
}
